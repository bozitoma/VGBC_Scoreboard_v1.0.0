"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
process.title = 'nodecg';
const semver_1 = tslib_1.__importDefault(require("semver"));
const chalk_1 = tslib_1.__importDefault(require("chalk"));
const commander_1 = require("commander");
const util_1 = tslib_1.__importDefault(require("./lib/util"));
const program = new commander_1.Command('nodecg');
const packageVersion = require('../package.json').version;
// Check for updates, asynchronously, so as to not make the CLI startup time excessively slow
util_1.default.getLatestCLIRelease()
    .then((release) => {
    if (semver_1.default.gt(release.version, packageVersion)) {
        console.log(chalk_1.default.yellow('?') +
            ' A new update is available for nodecg-cli: ' +
            chalk_1.default.green.bold(release.version) +
            chalk_1.default.dim(' (current: ' + packageVersion + ')'));
        console.log('  Run ' + chalk_1.default.cyan.bold('npm install -g nodecg-cli') + ' to install the latest version');
    }
})
    .catch(() => {
    // Do nothing, as this is an optional check.
});
// Initialise CLI
program.version(packageVersion).usage('<command> [options]');
// Initialise commands
require('./commands')(program);
// Handle unknown commands
program.on('*', () => {
    console.log('Unknown command:', program.args.join(' '));
    program.help();
});
// Print help if no commands were given
if (!process.argv.slice(2).length) {
    program.help();
}
// Process commands
program.parse(process.argv);
