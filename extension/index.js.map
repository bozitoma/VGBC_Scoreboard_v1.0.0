{"version":3,"file":"index.js","sources":["../src/extension/scoreboard.ts","../src/extension/index.ts"],"sourcesContent":["import {NodeCG} from \"./nodecg\";\nimport { Scoreboard } from \"../nodecg/generated/scoreboard\";\n\nexport const scoreboard = (nodecg: NodeCG) => {\n\t// 今後の実装でなんかあったらログ出すようにする\n\t// const log = new nodecg.Logger(\"scoreboard\");\n\tconst defaultValue: Scoreboard = {\n\t\tplayer1: {\n            name: 'Player1',\n            prefix: 'Team',\n            xID: '@',\n            score: 0\n        },\n        player2: {\n            name: 'Player2',\n            prefix: 'Team',\n            xID: '@',\n            score: 0\n        },\n        fullRoundText: ''\n\t}\n\tconst scoreboardRep = nodecg.Replicant(\"scoreboard\")\n\tscoreboardRep.value = defaultValue\n\n\tconst updateScoreboard = (data: Scoreboard) => {\n\t\tscoreboardRep.value = data\n\t}\n\n\tnodecg.listenFor(\"scoreboard:update\",updateScoreboard)\n\n    const bracketRep = nodecg.Replicant(\"bracket\")\n    bracketRep.value = {\n        bracketData: [{\n            identifier: \"\",\n            fullRoundText: \"\",\n            player1: {\n                prefix: \"\",\n                name: \"\",\n                score: 0\n            },\n            player2: {\n                prefix: \"\",\n                name: \"\",\n                score: 0\n            }\n        }]\n    };\n    console.log(bracketRep.value)\n\n    const infoRep = nodecg.Replicant(\"info\")\n    infoRep.value = {\n        title:\"\",\n        text:\"\"\n    }\n\n    const mcRep = nodecg.Replicant(\"mc\")\n    mcRep.value ={\n        McLeft: {\n            name: \"\",\n            xID: \"\"\n        },\n        McRight: {\n            name: \"\",\n            xID: \"\"\n        }\n    }\n};\n\n\n\n","import {NodeCG} from \"./nodecg\";\nimport {scoreboard} from \"./scoreboard\";\n\nexport default (nodecg: NodeCG) => {\n\tscoreboard(nodecg);\n\n};\n"],"names":[],"mappings":";;AAGa,MAAA,UAAA,GAAa,CAAC,MAAmB,KAAA;AAG7C,EAAA,MAAM,YAA2B,GAAA;AAAA,IAChC,OAAS,EAAA;AAAA,MACC,IAAM,EAAA,SAAA;AAAA,MACN,MAAQ,EAAA,MAAA;AAAA,MACR,GAAK,EAAA,GAAA;AAAA,MACL,KAAO,EAAA,CAAA;AAAA,KACX;AAAA,IACA,OAAS,EAAA;AAAA,MACL,IAAM,EAAA,SAAA;AAAA,MACN,MAAQ,EAAA,MAAA;AAAA,MACR,GAAK,EAAA,GAAA;AAAA,MACL,KAAO,EAAA,CAAA;AAAA,KACX;AAAA,IACA,aAAe,EAAA,EAAA;AAAA,GACtB,CAAA;AACA,EAAM,MAAA,aAAA,GAAgB,MAAO,CAAA,SAAA,CAAU,YAAY,CAAA,CAAA;AACnD,EAAA,aAAA,CAAc,KAAQ,GAAA,YAAA,CAAA;AAEtB,EAAM,MAAA,gBAAA,GAAmB,CAAC,IAAqB,KAAA;AAC9C,IAAA,aAAA,CAAc,KAAQ,GAAA,IAAA,CAAA;AAAA,GACvB,CAAA;AAEA,EAAO,MAAA,CAAA,SAAA,CAAU,qBAAoB,gBAAgB,CAAA,CAAA;AAElD,EAAM,MAAA,UAAA,GAAa,MAAO,CAAA,SAAA,CAAU,SAAS,CAAA,CAAA;AAC7C,EAAA,UAAA,CAAW,KAAQ,GAAA;AAAA,IACf,aAAa,CAAC;AAAA,MACV,UAAY,EAAA,EAAA;AAAA,MACZ,aAAe,EAAA,EAAA;AAAA,MACf,OAAS,EAAA;AAAA,QACL,MAAQ,EAAA,EAAA;AAAA,QACR,IAAM,EAAA,EAAA;AAAA,QACN,KAAO,EAAA,CAAA;AAAA,OACX;AAAA,MACA,OAAS,EAAA;AAAA,QACL,MAAQ,EAAA,EAAA;AAAA,QACR,IAAM,EAAA,EAAA;AAAA,QACN,KAAO,EAAA,CAAA;AAAA,OACX;AAAA,KACH,CAAA;AAAA,GACL,CAAA;AACA,EAAQ,OAAA,CAAA,GAAA,CAAI,WAAW,KAAK,CAAA,CAAA;AAE5B,EAAM,MAAA,OAAA,GAAU,MAAO,CAAA,SAAA,CAAU,MAAM,CAAA,CAAA;AACvC,EAAA,OAAA,CAAQ,KAAQ,GAAA;AAAA,IACZ,KAAM,EAAA,EAAA;AAAA,IACN,IAAK,EAAA,EAAA;AAAA,GACT,CAAA;AAEA,EAAM,MAAA,KAAA,GAAQ,MAAO,CAAA,SAAA,CAAU,IAAI,CAAA,CAAA;AACnC,EAAA,KAAA,CAAM,KAAO,GAAA;AAAA,IACT,MAAQ,EAAA;AAAA,MACJ,IAAM,EAAA,EAAA;AAAA,MACN,GAAK,EAAA,EAAA;AAAA,KACT;AAAA,IACA,OAAS,EAAA;AAAA,MACL,IAAM,EAAA,EAAA;AAAA,MACN,GAAK,EAAA,EAAA;AAAA,KACT;AAAA,GACJ,CAAA;AACJ,CAAA;;AC/DA,YAAe,CAAC,MAAmB,KAAA;AAClC,EAAA,UAAA,CAAW,MAAM,CAAA,CAAA;AAElB,CAAA;;;;"}